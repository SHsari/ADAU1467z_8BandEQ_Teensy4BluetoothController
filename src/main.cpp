#include <Arduino.h>

#include "8Band_Exported/SigmaStudioFW.h"
#include "8Band_Exported/USER_SETTINGS.h"
#include "ReadAndHandleSerialData.h"

#include <SPI.h>

#include "8Band_Exported/Project_ADAU146xSchematic_0.h"
#include "8Band_Exported/Project_ADAU146xSchematic_0_PARAM.h"

// Function prototypes
void DSP_HARD_RESET();

/**
 * This setup function is responsible for initializing hardware libraries.
 */
void setup() {
    delay(1000);              // 0.1 second startup delay
    Serial.begin(115200);    // Initialize the USB serial port for debug
    Serial.print("void Setup\n");
    btSerial.begin(9600);


#if USE_SPI                            // Initialize SPI library and toggle DSP into SPI mode
    pinMode(18, INPUT);                // Set the I2C SDA pin high-impedance to avoid contention with SPI
    pinMode(19, INPUT);                // Set the I2C SCL pin high-impedance to avoid contention with SPI
    digitalWrite(DSP_SS_PIN, HIGH);    // Set SPI slave select line to initialize high
    pinMode(DSP_SS_PIN, OUTPUT);       // Enable SPI slave select pin
    SPI.begin();                       // Initialize the SPI library

#endif
    Serial.print("SPI setup finished");
}    // End of setup

void loop() {

    // Drive Pin 6 of the USBi connector low to reset the DSP and SPI toggle if necessary.
    // default_download_IC_1, generated by SigmaStudio, will download the SigmaStudio program and start up the
    // DSP. It relies on a proper SPI or I2C implementation in SIGMASTUDIOFW.cpp, which must be tailored to
    // the individual processor. and assigning pins correctly in USER_SETTINGS.h.
    DSP_HARD_RESET();
    Serial.print("DSP Hard Reset\n");
    default_download_ADAU146XSCHEMATIC_0();
    Serial.print("Download schematics\n");

    initFilters();
    while(1){
        readBthSerial();
    }

}    // End of loop

void DSP_HARD_RESET() {
    pinMode(DSP_RESET_PIN, OUTPUT);
    digitalWrite(DSP_RESET_PIN, LOW);
    delay(10);
    digitalWrite(DSP_RESET_PIN, HIGH);
    // This delay accounts for ADM811T reset generator hold time on ADAU1467 eval board, adjust
    // as needed
    delay(560);
#if USE_SPI
    // Toggle the DSP into SPI mode by pulling the /SS pin low, then high, 3 times.
    for (uint8_t i = 0; i < 3; i++) {
        digitalWrite(DSP_SS_PIN, LOW);
        delayMicroseconds(10);
        digitalWrite(DSP_SS_PIN, HIGH);
        delayMicroseconds(10);
    }
#endif
}
